<Project Sdk="MSBuild.Sdk.Extras">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <AssemblyName>LoadAssembliesOnStartup.Fody</AssemblyName>
    <RootNamespace>LoadAssembliesOnStartup.Fody</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <PackageId>LoadAssembliesOnStartup.Fody</PackageId>
    <PackageVersion>3.0.0-alpha0001</PackageVersion>
    <Description>Fody add-in for forcing referenced assemblies to be loaded on startup. This allows other modules to register types without actually having to using their types directly.</Description>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PackageTags>load;assemblies;references;reference;force;startup;fody;ilweaving;weaving</PackageTags>
    <DisableFody>true</DisableFody>
    <NoWarn>$(NoWarn);NU5100;NU5118;NU5128</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <!-- SonarQube requires a project guid -->
    <ProjectGuid>11688DF4-BB8B-4BC8-B2F4-78DF23292EF6</ProjectGuid>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Fody" Version="6.6.3" PrivateAssets="none" />
    <PackageReference Include="FodyHelpers" Version="6.6.3" PrivateAssets="All" />
    <PackageReference Include="FodyPackaging" Version="6.6.3" PrivateAssets="All" />
    <PackageReference Update="NETStandard.Library" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- this project targets netstandard2.0 (unnecessarily) and has the below ref to work around this bug https://github.com/Microsoft/msbuild/issues/2661 -->
    <ProjectReference Include="..\$(PackageId)\$(PackageId).csproj" PrivateAssets="All" Condition="$(TargetFramework)=='fake'" />
  </ItemGroup>

  <Import Project="$(MSBuildProjectDirectory)\..\Directory.build.shared.explicit.props" Condition="Exists('$(MSBuildProjectDirectory)\..\Directory.build.shared.explicit.props')" />

  <!--
  Note: the code below comes from https://raw.githubusercontent.com/Fody/Fody/master/FodyPackaging/build/FodyPackaging.targets
  but is needed because we use 'LoadAssembliesOnStartup.Fody' instead of 'LoadAssembliesOnStartup' as attributes project name
  -->

  <!-- Required *after* import of explicit properties -->
  <PropertyGroup>
    <!-- The properties below come from the FodyPackaging.props, see explanation at end of file -->
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeFodyFiles</TargetsForTfmSpecificContentInPackage>
    <DisableFody>true</DisableFody>
    <WeaverDirPath>$(OverridableOutputPath)\..\$(PackageId)</WeaverDirPath>
    <Configurations>Debug;Release;Test</Configurations>
  </PropertyGroup>

  <!-- Explicitly remove any content files, this is a weaver only -->
  <PropertyGroup>
    <IncludeBuildOutput>false</IncludeBuildOutput>
  </PropertyGroup>

  <Target Name="IncludeFodyFiles">
    <PropertyGroup>
      <WeaverFile>$(WeaverDirPath)\netstandard2.0\$(PackageId).dll</WeaverFile>
      <XcfFile>$(WeaverDirPath)\netstandard2.0\$(PackageId).xcf</XcfFile>
    </PropertyGroup>

    <Error Text="FodyPackaging: No weaver found at $(WeaverFile). $(ProjectName) should have a Project Dependency on $(PackageId), and $(PackageId) should target 'netstandard2.0'." Condition="!Exists($(WeaverFile))" />

    <ItemGroup>
      <TfmSpecificPackageFile Include="$(XcfFile)" PackagePath="weaver\$(PackageId).xcf" Condition="Exists($(XcfFile))" />
      <TfmSpecificPackageFile Include="$(WeaverFile)" PackagePath="weaver\$(PackageId).dll" />
      <TfmSpecificPackageFile Include="$(WeaverPropsFile)" PackagePath="build\$(PackageId).props" />
    </ItemGroup>

    <CreateItem Include="$(MSBuildThisFileDirectory)..\$(PackageId)\$(PackageId).props" AdditionalMetadata="PackagePath=build">
      <Output TaskParameter="Include" ItemName="TfmSpecificPackageFile" />
    </CreateItem>
  </Target>
</Project>
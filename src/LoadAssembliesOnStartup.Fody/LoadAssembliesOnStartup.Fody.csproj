<Project Sdk="MSBuild.Sdk.Extras">
  <PropertyGroup>
    <TargetFrameworks>net46;netstandard2.0</TargetFrameworks>
    <AssemblyName>LoadAssembliesOnStartup.Fody</AssemblyName>
    <RootNamespace>LoadAssembliesOnStartup.Fody</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <PackageId>LoadAssembliesOnStartup.Fody</PackageId>
    <PackageVersion>3.0.0-alpha0001</PackageVersion>
    <Description>Fody add-in for forcing referenced assemblies to be loaded on startup. This allows other modules to register types without actually having to using their types directly.</Description>
    <PackageTags>load;assemblies;references;reference;force;startup;fody;ilweaving;weaving</PackageTags>
    <DisableFody>true</DisableFody>
  </PropertyGroup>

  <PropertyGroup>
    <!-- SonarQube requires a project guid -->
    <ProjectGuid>11688DF4-BB8B-4BC8-B2F4-78DF23292EF6</ProjectGuid>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="Fody" Version="4.0.0" PrivateAssets="None" />
    <PackageReference Include="FodyHelpers" Version="4.0.0" PrivateAssets="All" />
    <PackageReference Update="NETStandard.Library" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- this project targets netstandard2.0 (unnecessarily) and has the below ref to work around this bug https://github.com/Microsoft/msbuild/issues/2661 -->
    <ProjectReference Include="..\$(PackageId)\$(PackageId).csproj" PrivateAssets="All" Condition="$(TargetFramework)=='fake'" />
  </ItemGroup>
  
  <Import Project="$(MSBuildProjectDirectory)\..\Directory.build.shared.explicit.props" Condition="Exists('$(MSBuildProjectDirectory)\..\Directory.build.shared.explicit.props')" />

  <!--
  Note: the code below comes from https://raw.githubusercontent.com/Fody/Fody/master/FodyPackaging/build/FodyPackaging.targets
  but is needed because we use 'Catel.Fody.Attributes' instead of 'Catel' as attributes project name
  -->
  
  <!-- Required *after* import of explicit properties -->
  <PropertyGroup>
    <!-- The properties below come from the FodyPackaging.props, see explanation at end of file -->
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeFodyFiles</TargetsForTfmSpecificContentInPackage>
    <DisableFody>true</DisableFody>
    <WeaverDirPath>$(OverridableOutputPath)\..\$(PackageId)</WeaverDirPath>
    <Configurations>Debug;Release;Test</Configurations>
  </PropertyGroup>
  
  <Target Name="IncludeFodyFiles">
    <ItemGroup>
      <NetClassicFilesToInclude Include="$(WeaverDirPath)\net4*\$(PackageId).dll" />
      <NetClassicFilesToInclude Include="$(WeaverDirPath)\net4*\$(PackageId).xcf" />
      <NetClassicFilesToInclude Include="$(WeaverDirPath)\net4*\$(PackageId).pdb" />
      <NetStandardFilesToInclude Include="$(WeaverDirPath)\netstandard2*\$(PackageId).dll" />
      <NetStandardFilesToInclude Include="$(WeaverDirPath)\netstandard2*\$(PackageId).xcf" />
      <NetStandardFilesToInclude Include="$(WeaverDirPath)\netstandard2*\$(PackageId).pdb" />
    </ItemGroup>
    
    <CreateItem Include="@(NetClassicFilesToInclude)" AdditionalMetadata="PackagePath=netclassicweaver">
      <Output TaskParameter="Include" ItemName="TfmSpecificPackageFile" />
    </CreateItem>
    
    <CreateItem Include="@(NetStandardFilesToInclude)" AdditionalMetadata="PackagePath=netstandardweaver">
      <Output TaskParameter="Include" ItemName="TfmSpecificPackageFile" />
    </CreateItem>
    
    <CreateItem Include="$(MSBuildThisFileDirectory)..\$(PackageId)\$(PackageId).props" AdditionalMetadata="PackagePath=build">
      <Output TaskParameter="Include" ItemName="TfmSpecificPackageFile" />
    </CreateItem>
  </Target>
</Project>